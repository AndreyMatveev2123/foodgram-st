{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useTags } from './index.js';\nimport api from '../api';\nexport default function useRecipes() {\n  _s();\n  const [subscriptions, setSubscriptions] = useState([]);\n  const [subscriptionsPage, setSubscriptionsPage] = useState(1);\n  const [subscriptionsCount, setSubscriptionsCount] = useState(0);\n  const removeSubscription = ({\n    id,\n    callback\n  }) => {\n    api.deleteSubscriptions({\n      author_id: id\n    }).then(res => {\n      const subscriptionsUpdated = subscriptions.filter(item => {\n        return item.id !== id;\n      });\n      setSubscriptions(subscriptionsUpdated);\n      setSubscriptionsCount(subscriptionsCount - 1);\n      callback && callback();\n    }).catch(err => {\n      const {\n        errors\n      } = err;\n      if (errors) {\n        alert(errors);\n      }\n    });\n  };\n  return {\n    subscriptions,\n    setSubscriptions,\n    subscriptionsPage,\n    setSubscriptionsPage,\n    removeSubscription,\n    subscriptionsCount,\n    setSubscriptionsCount\n  };\n}\n_s(useRecipes, \"/7htARMHjB1mnqvkjPzWT6w3Cr8=\");","map":{"version":3,"names":["React","useState","useTags","api","useRecipes","_s","subscriptions","setSubscriptions","subscriptionsPage","setSubscriptionsPage","subscriptionsCount","setSubscriptionsCount","removeSubscription","id","callback","deleteSubscriptions","author_id","then","res","subscriptionsUpdated","filter","item","catch","err","errors","alert"],"sources":["C:/Users/Asus/Desktop/foodgram-st/frontend/src/utils/use-subscriptions.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useTags } from './index.js'\r\nimport api from '../api'\r\n\r\nexport default function useRecipes () {\r\n  const [ subscriptions, setSubscriptions ] = useState([])\r\n  const [ subscriptionsPage, setSubscriptionsPage ] = useState(1)\r\n  const [ subscriptionsCount, setSubscriptionsCount ] = useState(0)\r\n\r\n  const removeSubscription = ({ id, callback }) => {\r\n    api\r\n      .deleteSubscriptions({ author_id: id })\r\n      .then(res => {\r\n        const subscriptionsUpdated = subscriptions.filter(item => {\r\n          return item.id !== id\r\n        })\r\n        setSubscriptions(subscriptionsUpdated)\r\n        setSubscriptionsCount(subscriptionsCount - 1)\r\n        callback && callback()\r\n      })\r\n      .catch(err => {\r\n        const { errors } = err\r\n        if (errors) {\r\n          alert(errors)\r\n        }\r\n      })\r\n  }\r\n  \r\n  return {\r\n    subscriptions,\r\n    setSubscriptions,\r\n    subscriptionsPage,\r\n    setSubscriptionsPage,\r\n    removeSubscription,\r\n    subscriptionsCount,\r\n    setSubscriptionsCount\r\n  }\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,OAAO,QAAQ,YAAY;AACpC,OAAOC,GAAG,MAAM,QAAQ;AAExB,eAAe,SAASC,UAAUA,CAAA,EAAI;EAAAC,EAAA;EACpC,MAAM,CAAEC,aAAa,EAAEC,gBAAgB,CAAE,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAAEO,iBAAiB,EAAEC,oBAAoB,CAAE,GAAGR,QAAQ,CAAC,CAAC,CAAC;EAC/D,MAAM,CAAES,kBAAkB,EAAEC,qBAAqB,CAAE,GAAGV,QAAQ,CAAC,CAAC,CAAC;EAEjE,MAAMW,kBAAkB,GAAGA,CAAC;IAAEC,EAAE;IAAEC;EAAS,CAAC,KAAK;IAC/CX,GAAG,CACAY,mBAAmB,CAAC;MAAEC,SAAS,EAAEH;IAAG,CAAC,CAAC,CACtCI,IAAI,CAACC,GAAG,IAAI;MACX,MAAMC,oBAAoB,GAAGb,aAAa,CAACc,MAAM,CAACC,IAAI,IAAI;QACxD,OAAOA,IAAI,CAACR,EAAE,KAAKA,EAAE;MACvB,CAAC,CAAC;MACFN,gBAAgB,CAACY,oBAAoB,CAAC;MACtCR,qBAAqB,CAACD,kBAAkB,GAAG,CAAC,CAAC;MAC7CI,QAAQ,IAAIA,QAAQ,CAAC,CAAC;IACxB,CAAC,CAAC,CACDQ,KAAK,CAACC,GAAG,IAAI;MACZ,MAAM;QAAEC;MAAO,CAAC,GAAGD,GAAG;MACtB,IAAIC,MAAM,EAAE;QACVC,KAAK,CAACD,MAAM,CAAC;MACf;IACF,CAAC,CAAC;EACN,CAAC;EAED,OAAO;IACLlB,aAAa;IACbC,gBAAgB;IAChBC,iBAAiB;IACjBC,oBAAoB;IACpBG,kBAAkB;IAClBF,kBAAkB;IAClBC;EACF,CAAC;AACH;AAACN,EAAA,CAjCuBD,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}